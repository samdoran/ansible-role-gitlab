# Passed to find -mitme +n when deleting GitLab backups
gitlab_days_old_backups: 10

# Basic GitLab settings for configuring SSL
# More options are available in the GitLab Nginx section
gitlab_fqdn: "{{ ansible_fqdn }}"
gitlab_nginx_ssl_enabled: False
gitlab_ssl_self_sign: False
gitlab_ssl_self_sign_subj: "/CN={{ ansible_fqdn }}"
gitlab_ssl_self_sign_days: 365
gitlab_nginx_ssl_filename: "{{ ansible_fqdn }}"
gitlab_nginx_ssl_certificate_path: "{{ gitlab_nginx_ssl_cert_path }}/{{ gitlab_nginx_ssl_filename }}.crt"
gitlab_nginx_ssl_certificate_key_path: "{{ gitlab_nginx_ssl_key_path }}/{{ gitlab_nginx_ssl_filename }}.key"
gitlab_nginx_ssl_port: 443

# gitlab_version: "8.6.3"         # If undefined, install the latest. Make sure this is a string by quoting it.
gitlab_version_suffix: "-ce.0"    # Only used for Debian and if gitlab_version is defined.


# These are examples of storing a block varible in YAML using the "|" character
# to indicate a literal style, preserving line breaks.
# The private key should be stored in an Ansible vault.
#
# See http://yaml.org/spec/current.html#id2503232 for more information.
#
# gitlab_nginx_ssl_crt: |
#   -----BEGIN CERTIFICATE-----
#   # public cert goes here
#   -----END CERTIFICATE-----

# gitlab_nginx_ssl_key: |
#   -----BEGIN RSA PRIVATE KEY-----
#   # private cert goes here
#   -----END RSA PRIVATE KEY-----

# These are all the variables available in gitlab.rb. They will only be included
# in gitlab.rb if they are defined. Some variables are lists that generate arrays
# in the final gitlab.rb. Sensitive data, such as passwords, should be stored
# in a vault.

# --- gitlab.yml configuration --- #
# gitlab_ssh_host: ssh.host_example.com
# gitlab_time_zone: UTC
# gitlab_email_enabled: True
# gitlab_email_from: "gitlab@{{ gitlab_fqdn }}"
# gitlab_email_display_name: 'GitLab'
# gitlab_email_reply_to: "noreply@{{ gitlab_fqdn }}"
# gitlab_default_can_create_group: True
# gitlab_username_changing_enabled: True
# gitlab_default_theme: 2
# gitlab_restricted_visibility_levels: [] # to restrict public and internal: [ 'public' , 'internal' ]
# gitlab_default_projects_features_issues: True
# gitlab_default_projects_features_merge_requests: True
# gitlab_default_projects_features_wiki: True
# gitlab_default_projects_features_snippets: False
# gitlab_default_projects_features_visibility_level: private
# gitlab_repository_downloads_path: tmp/repositories
# gitlab_gravatar_plain_url: "http://www.gravatar.com/avatar/%{hash}?s=%{size}&d=identicon"
# gitlab_gravatar_ssl_url: "https://secure.gravatar.com/avatar/%{hash}?s=%{size}&d=identicon"
# gitlab_webhook_timeout: 10

## LDAP sign-in
# These settings are documented in more detail at
# https://gitlab.com/gitlab-org/omnibus-gitlab/blob/629def0a7a26e7c2326566f0758d4a27857b52a3/README.md#setting-up-ldap-sign-in

# gitlab_ldap_enabled: False
## Each item in gitlab_ldap_servers is inserted into gitlab.rb
## Make sure to define all variables for each server or template will fail.
# gitlab_ldap_servers:
#   - name: gitlab_ldap_main
#     provider_id: main
#     label: 'LDAP'
#     host: '_your_ldap_server'
#     port: 636
#     uid: 'sAMAccountName'
#     method: 'ssl'
#     bind_dn: '_the_full_dn_of_the_user_you_will_bind_with'
#     password: '_the_password_of_the_bind_user'
#     active_directory: True
#     allow_username_or_email_login: False
#     base: ''
#     user_filter: ''

#   - name: gitlab_ldap_secondary
#     provider_id: secondary
#     label: 'LDAP2'
#     host: '_your_ldap_server'
#     port: 636
#     uid: 'sAMAccountName'
#     method: 'ssl'
#     bind_dn: '_the_full_dn_of_the_user_you_will_bind_with'
#     password: '_the_password_of_the_bind_user'
#     active_directory: True
#     allow_username_or_email_login: False
#     base: ''
#     user_filter: ''

## Omniauth
## see https://gitlab.com/gitlab-org/omnibus-gitlab/blob/629def0a7a26e7c2326566f0758d4a27857b52a3/README.md#omniauth-google-twitter-github-login
# gitlab_omniauth_enabled: True
# gitlab_omniauth_allow_single_sign_on: False
# gitlab_omniauth_block_auto_created_users: True
## Specify multiple providers if desired.
## name, app_id, and app_secret are required
## url and args are optional
# gitlab_omniauth_providers:
#   - name: github
#     app_id: 'YOUR APP ID'
#     app_secret: 'YOUR APP SECRET'
#     url: 'https://github.com'
#     args: '"scope" => "user:email"'

## Backups
## see https://gitlab.com/gitlab-org/omnibus-gitlab/blob/629def0a7a26e7c2326566f0758d4a27857b52a3/README.md#backups
# gitlab_backup_path: '/var/opt/gitlab/backups'
# gitlab_backup_keep_time: 604800
# gitlab_backup_upload_connection:
#   provider: AWS
#   region: eu-west-1
#   aws_access_key_id: 'AKIAKIAKI'
#   aws_secret_access_key: 'secret123'
# gitlab_backup_upload_remote_directory: 'my.s3.bucket'

## Data storing directory
## see https://gitlab.com/gitlab-org/onibus-gitlab/blob/629def0a7a26e7c2326566f0758d4a27857b52a3/README.md#storing-git-data-in-an-alternative-directory
## If you want to use a single non-default directory to store git data use:
# gitlab_git_data_dir: /var/opt/gitlab/git-data

# gitlab_satellites_timeout: 30

## GitLab Shell settings for GitLab
# gitlab_shell_ssh_port: 22
# gitlab_git_max_size: 20971520
# gitlab_git_timeout: 10

## Extra customization
# gitlab_extra_google_analytics_id: '_your_tracking_id'
# gitlab_extra_piwik_url: '_your_piwik_url'
# gitlab_extra_piwik_id: '_your_piwik_site_id'
# gitlab_extra_sign_in_text:
#   company_name: CompanyName
#   company_url: http://www.companydomain.com/
#   company_logo_url: http://www.companydomain.com/logo.png

# gitlab_env:
#   bundle_gemfile: "/opt/gitlab/embedded/service/gitlab-rails/Gemfile"
#   path: "/opt/gitlab/bin:/opt/gitlab/embedded/bin:/bin:/usr/bin"

## It is not recommended to change these directories
# gitlab_dir: '/var/opt/gitlab/gitlab-rails'
# gitlab_log_directory: '/var/log/gitlab/gitlab-rails'


# --- GitLab Application Settings --- #
# gitlab_upload_directory: /var/opt/gitlab/gitlab-rails/uploads
# gitlab_rate_limit_requests_per_period: 10
# gitlab_rate_limit_period: 60
# gitlab_initial_root_password: password


# --- GitLab Database Settings --- #
## see https://gitlab.com/gitlab-org/omnibus-gitlab/blob/629def0a7a26e7c2326566f0758d4a27857b52a3/doc/settings/database.md#database-settings
## Only needed if you use an external database.
# gitlab_db_adapter: postgresql
# gitlab_db_encoding: unicode
# gitlab_db_database: gitlabhq_production
# gitlab_db_pool: 10
# gitlab_db_username: gitlab
# gitlab_db_password: nil
# gitlab_db_host: nil
# gitlab_db_port: 5432
# gitlab_db_socket: nil


# --- GitLab Redis Settings --- #
## see https://gitlab.com/gitlab-org/omnibus-gitlab/blob/629def0a7a26e7c2326566f0758d4a27857b52a3/doc/settings/redis.md#redis-settings
## Connect to your own redis instance.
# gitlab_redis_host: 127.0.0.1
# gitlab_redis_port: nil
# gitlab_redis_socket: '/var/opt/gitlab/redis/redis.socket'


# --- GitLab email server settings --- #
## see https://gitlab.com/gitlab-org/omnibus-gitlab/blob/629def0a7a26e7c2326566f0758d4a27857b52a3/doc/settings/smtp.md#smtp-settings
## Use remote smtp server instead of local (sendmail/postfix).
# gitlab_smtp_enable: True
# gitlab_smtp_service: postfix
# gitlab_smtp_address: "smtp.server"
# gitlab_smtp_port: 456
# gitlab_smtp_user_name: "smtp user"
# gitlab_smtp_password: "smtp password"
# gitlab_smtp_domain: "example.com"
# gitlab_smtp_authentication: "login"
# gitlab_smtp_enable_starttls_auto: True
# gitlab_smtp_tls: False
# gitlab_smtp_openssl_verify_mode: False # Can be: 'none', 'peer', 'client_once', 'fail_if_no_peer_cert', see http://api.rubyonrails.org/classes/ActionMailer/Base.html
# gitlab_smtp_ca_path: '/etc/ssl/certs'
# gitlab_smtp_ca_file: '/etc/ssl/certs/ca-certificates.crt'


# --- GitLab user --- #
# gitlab_user_username: git
# gitlab_user_group: git
# gitlab_user_uid: nil
# gitlab_user_gid: nil
## The shell for the git user
# gitlab_user_shell: "/bin/sh"
## The home directory for the git user
# gitlab_user_home: "/var/opt/gitlab"
# gitlab_user_git_user_name: "GitLab"
# gitlab_user_git_user_email: "gitlab@#{node['fqdn']}"



# --- GitLab Unicorn --- #
# gitlab_unicorn_worker_timeout: 60
# gitlab_unicorn_worker_processes: 3

## Advanced settings
# gitlab_unicorn_listen: '127.0.0.1'
# gitlab_unicorn_port: 8080
# gitlab_unicorn_socket: '/var/opt/gitlab/gitlab-rails/sockets/gitlab.socket'
# gitlab_unicorn_pidfile: '/opt/gitlab/var/unicorn/unicorn.pid'
# gitlab_unicorn_tcp_nopush: true
# gitlab_unicorn_backlog_socket: 1024
## Changing this setting is not recommend
# gitlab_unicorn_log_directory: "/var/log/gitlab/unicorn"



# --- GitLab Sidekiq --- #
# gitlab_sidekiq_log_directory: '/var/log/gitlab/sidekiq'
# gitlab_sidekiq_shutdown_timeout: 4



# --- GitLab Shell --- #
# gitlab_shell_audit_usernames: False
# gitlab_shell_log_level: 'INFO'
# gitlab_shell_http_settings: "{ user: 'username', password: 'password', ca_file: '/etc/ssl/cert.pem', ca_path: '/etc/pki/tls/certs', self_signed_cert: false}"
# gitlab_shell_log_directory: "/var/log/gitlab/gitlab-shell/"

## If enabled, git-annex needs to be installed on the server where gitlab is setup
# For Debian and Ubuntu systems this can be done with: sudo apt-get install git-annex
# For CentOS: sudo yum install epel-release && sudo yum install git-annex
# gitlab_shell_git_annex_enabled: False



# --- GitLab PostgreSQL --- #
# gitlab_postgresql_enable: True
# gitlab_postgresql_listen_address: nil
# gitlab_postgresql_port: 5432
# gitlab_postgresql_data_dir: "/var/opt/gitlab/postgresql/data"

## Recommend value is 1/4 of total RAM, up to 14GB. Default is 256MB.
# gitlab_postgresql_shared_buffers: "{{ ansible_memtotal_mb // 4 }}MB"

## Advanced settings
# gitlab_postgresql_ha: False
# gitlab_postgresql_dir: "/var/opt/gitlab/postgresql"
# gitlab_postgresql_log_directory: "/var/log/gitlab/postgresql"
# gitlab_postgresql_username: "gitlab-psql"
# gitlab_postgresql_uid: nil
# gitlab_postgresql_gid: nil
# gitlab_postgresql_shell: "/bin/sh"
# gitlab_postgresql_home: "/var/opt/gitlab/postgresql"
# gitlab_postgresql_user_path: "/opt/gitlab/embedded/bin:/opt/gitlab/bin:$PATH"
# gitlab_postgresql_sql_user: "gitlab"
# gitlab_postgresql_sql_ci_user: "gitlab_ci"
# gitlab_postgresql_max_connections: 200
# gitlab_postgresql_md5_auth_cidr_addresses: []
# gitlab_postgresql_trust_auth_cidr_addresses: []
# gitlab_postgresql_shmmax: 17179869184
# gitlab_postgresql_shmall: 4194304
# gitlab_postgresql_work_mem: "8MB"
# gitlab_postgresql_effective_cache_size: "1MB"
# gitlab_postgresql_checkpoint_segments: 10
# gitlab_postgresql_checkpoint_timeout: "5min"
# gitlab_postgresql_checkpoint_completion_target: 0.9
# gitlab_postgresql_checkpoint_warning: "30s"



# --- GitLab Redis --- #
## see https://gitlab.com/gitlab-org/omnibus-gitlab/blob/629def0a7a26e7c2326566f0758d4a27857b52a3/doc/settings/redis.md#redis-settings
## Connect to your own redis instance.

# gitlab_redis_host: 127.0.0.1
# gitlab_redis_port: nil
# gitlab_redis_socket: /var/opt/gitlab/redis/redis.socket
# gitlab_redis_enable: True
# gitlab_redis_username: gitlab-redis
# gitlab_redis_uid: nil
# gitlab_redis_gid: nil



# --- GitLab Web Server --- #
## see: https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/doc/settings/nginx.md#using-a-non-bundled-web-server
## When bundled nginx is disabled we need to add the external webserver user to the GitLab webserver group.

# List of users is inserted into an array in gitlab.rb
# gitlab_web_server_external_users:
#   - jean
#   - logan
#   - scott
# gitlab_web_server_username: 'gitlab-www'
# gitlab_web_server_group: 'gitlab-www'
# gitlab_web_server_uid: nil
# gitlab_web_server_gid: nil



# --- GitLab Nginx --- #
## see: https://gitlab.com/gitlab-org/omnibus-gitlab/tree/629def0a7a26e7c2326566f0758d4a27857b52a3/doc/settings/nginx.md

# gitlab_nginx_enable: True
# gitlab_nginx_client_max_body_size: '250m'
# gitlab_nginx_ssl_enabled: False
# gitlab_nginx_redirect_http_to_https: False
# gitlab_nginx_redirect_http_to_https_port: 80
# gitlab_nginx_ssl_ciphers:
#   - ECDHE-RSA-AES256-GCM-SHA384
#   - ECDHE-RSA-AES128-GCM-SHA256
#   - DHE-RSA-AES256-GCM-SHA384
#   - DHE-RSA-AES128-GCM-SHA256
#   - ECDHE-RSA-AES256-SHA384
#   - ECDHE-RSA-AES128-SHA256
#   - ECDHE-RSA-AES256-SHA
#   - ECDHE-RSA-AES128-SHA
#   - DHE-RSA-AES256-SHA256
#   - DHE-RSA-AES128-SHA256
#   - DHE-RSA-AES256-SHA
#   - DHE-RSA-AES128-SHA
#   - ECDHE-RSA-DES-CBC3-SHA
#   - EDH-RSA-DES-CBC3-SHA
#   - AES256-GCM-SHA384
#   - AES128-GCM-SHA256
#   - AES256-SHA256
#   - AES128-SHA256
#   - AES256-SHA
#   - AES128-SHA
#   - DES-CBC3-SHA
#   - HIGH
#   - '!aNULL'
#   - '!eNULL'
#   - '!EXPORT'
#   - '!DES'
#   - '!MD5'
#   - '!PSK'
#   - '!RC4'
# gitlab_nginx_ssl_prefer_server_ciphers: "on"
# gitlab_nginx_ssl_protocols:
#   - TLSv1
#   - TLSv1.1
#   - TLSv1.2
# gitlab_nginx_ssl_session_cache: "builtin:1000  shared:SSL:10m"
# gitlab_nginx_ssl_session_timeout: "5m"
# gitlab_nginx_listen_addresses:
#   - '*'
# gitlab_nginx_listen_port: 80 # override only if you use a reverse proxy: https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/doc/settings/nginx.md#setting-the-nginx-listen-port
# gitlab_nginx_custom_gitlab_server_config: 'location ^~ /foo-namespace/bar-project/raw/ {\n deny all;\n}\n'
# gitlab_nginx_custom_nginx_config: 'include /etc/nginx/conf.d/example.conf;'

## Advanced settings
# gitlab_nginx_dir: "/var/opt/gitlab/nginx"
# gitlab_nginx_log_directory: "/var/log/gitlab/nginx"
# gitlab_nginx_worker_processes: 4
# gitlab_nginx_worker_connections: 10240
# gitlab_nginx_sendfile: 'on'
# gitlab_nginx_tcp_nopush: 'on'
# gitlab_nginx_tcp_nodelay: 'on'
# gitlab_nginx_gzip: "on"
# gitlab_nginx_gzip_http_version: "1.0"
# gitlab_nginx_gzip_comp_level: "2"
# gitlab_nginx_gzip_proxied: "any"
# gitlab_nginx_gzip_types:
#   - "text/plain"
#   - "text/css"
#   - "application/x-javascript"
#   - "text/xml"
#   - "application/xml"
#   - "application/xml+rss"
#   - "text/javascript"
#   - "application/json"
# gitlab_nginx_keepalive_timeout: 65
# gitlab_nginx_cache_max_size: '5000m'



# --- GitLab Logging --- #
## see: https://gitlab.com/gitlab-org/omnibus-gitlab/tree/629def0a7a26e7c2326566f0758d4a27857b52a3/README.md#logs

## rotate after 200 MB of log data
# gitlag_logging_svlogd_size: "200 * 1024 * 1024"

## keep 30 rotated log files
# gitlag_logging_svlogd_num: 30

## rotate after 24 hours
# gitlag_logging_svlogd_timeout: "24 * 60 * 60"

## compress logs with gzip
# gitlag_logging_svlogd_filter: gzip

## transmit log messages via UDP
# gitlag_logging_svlogd_udp: nil

## custom prefix for log messages
# gitlag_logging_svlogd_prefix: nil

## rotate logs daily
# gitlag_logging_logrotate_frequency: daily

## do not rotate by size by default
# gitlag_logging_logrotate_size: nil

## keep 30 rotated logs
# gitlag_logging_logrotate_rotate: 30

## see 'man logrotate'
# gitlag_logging_logrotate_compress: compress

## see 'man logrotate'
# gitlag_logging_logrotate_method: copytruncate

## no postrotate command by default
# gitlag_logging_logrotate_postrotate: nil

## see: https://gitlab.com/gitlab-org/omnibus-gitlab/tree/629def0a7a26e7c2326566f0758d4a27857b52a3/README.md#logrotate
## You can disable built in logrotate feature.
# gitlab_logrotate_enabled: True



# --- GitLab Git --- #
## Advanced setting for configuring git system settings for omnibus-gitlab internal git
## For multiple options under one header use array of comma separated values, eg.
## { "receive" => ["fsckObjects = true"], "alias" => ["st = status", "co = checkout"] }

# gitlab_omnibus_gitconfig = '"receive" => ["fsckObjects = true"]'
